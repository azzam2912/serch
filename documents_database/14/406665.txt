smf introduces all these capabilities are made possible by treating services as first class objects that is they are more than just user executed software to the os they can be defined to have special states that allow finer control and permit monitoring and probing for diagnosing software failures rather than having the administrator or dedicated restarter modules kill and restart the service as before services are software objects that provide a set of capabilities to other software for example a webserver provides http service to web browsers other services include nfs for sharing files on a network dhcp for dynamic ip address assignment and secure shell for remote logins even higher level functions can be services such as specific databases for e commerce finance manufacturing control etc typically services are automatically started at boot up long lived have common states e g running not running relationship dependencies sendmail service depends on naming service which depends on networking services and are critical to the dedicated function of the server in versions of solaris prior to solaris 10 and in unix in general services are configured in text files with startup files in the etc rc d directory trees and configuration