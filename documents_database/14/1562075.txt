barnes it was originally used internally within ici but was distributed by spl international in 1974 it was designed for use in real time computing hence the initials rtl real time language based on concepts from algol 68 it was intended to be a small simple language rtl 2 was standardised in 1980 by the british standards institution rtl 2 was a strongly typed language with separate compilation the compilation units contained one or more items known as bricks i e a procedure brick was a procedure which may or may not return a scalar value have scalar parameters or have local scalar variables the entry mechanism and implementation of local variables was re entrant non scalar data could only be accessed via reference so called ref variables were considered scalar a data brick was a named static collection of scalars arrays and records programmers had to implement memory management themselves there was no heap or garbage collection a stack brick was an area of storage reserved for running all the procedures of a single process and contained the call stack local variables and other housekeeping items the extent to which stack bricks were actually used varied depending upon the