the null object design pattern describes the uses of such objects and their behavior or lack thereof it was first published in the pattern languages of program design book series in most object oriented languages such as java or c references may be null these references need to be checked to ensure they are not null before invoking any methods because methods typically cannot be invoked on null references the objective c language takes another approach to this problem and does nothing when sending a message to codice 1 if a return value is expected codice 1 for objects 0 for numeric values codice 3 for codice 4 values or a struct for struct types with all its members initialised to codice 5 0 codice 3 zero initialised struct is returned instead of using a null reference to convey absence of an object for instance a non existent customer one uses an object which implements the expected interface but whose method body is empty the advantage of this approach over a working default implementation is that a null object is very predictable and has no side effects it does nothing for example a function may retrieve a list of files