an augmented assignment is generally used to replace a statement where an operator takes a variable as one of its arguments and then assigns the result back to the same variable a simple example is codice 1 which is expanded to codice 2 similar constructions are often available for various binary operators in general in languages offering this feature most operators that can take a variable as one of their arguments and return a result of the same type have an augmented assignment equivalent that assigns the result back to the variable in place including arithmetic operators bitshift operators and bitwise operators for example the following statement or some variation of it can be found in many programs this means find the number stored in the variable x add 1 to it and store the result of the addition in the variable x as simple as this seems it may have an inefficiency in that the location of variable x has to be looked up twice if the compiler does not recognize that two parts of the expression are identical x might be a reference to some array element or other complexity in comparison here is the augmented assignment version