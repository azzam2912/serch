some architectures may be configured to automatically generate an exception on an operation resulting in overflow an illustrative example is what happens if we add 127 and 127 using 8 bit registers 127 127 is 254 but using 8 bit arithmetic the result would be 1111 1110 binary which is 2 in two s complement and thus negative a negative result out of positive operands or vice versa is an overflow the overflow flag would then be set so the program can be aware of the problem and mitigate this or signal an error the overflow flag is thus set when the most significant bit here considered the sign bit is changed by adding two numbers with the same sign or subtracting two numbers with opposite signs overflow never occurs when the sign of two addition operands are different or the sign of two subtraction operands are the same internally the overflow flag is usually generated by an exclusive or of the internal carry into and out of the sign bit as the sign bit is the same as the most significant bit of a number considered unsigned the overflow flag is meaningless and normally ignored when unsigned numbers are