it describes a formal language in terms of a set of rules for recognizing strings in the language the formalism was introduced by bryan ford in 2004 and is closely related to the family of top down parsing languages introduced in the early 1970s syntactically pegs also look similar to context free grammars cfgs but they have a different interpretation the choice operator selects the first match in peg while it is ambiguous in cfg this is closer to how string recognition tends to be done in practice e g by a recursive descent parser unlike cfgs pegs cannot be ambiguous if a string parses it has exactly one valid parse tree it is conjectured that there exist context free languages that cannot be recognized by a peg but this is not yet proven pegs are well suited to parsing computer languages and artificial human languages such as lojban but not natural languages where the performance of peg algorithms is comparable to general cfg algorithms such as the earley algorithm formally a parsing expression grammar consists of each parsing rule in p has the form a e where a is a nonterminal symbol and e is a parsing expression a