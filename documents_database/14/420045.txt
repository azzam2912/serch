computer systems can be sorted in three main classes 1 transformational systems that take some inputs process them deliver their outputs and terminate their execution a typical example is a compiler 2 interactive systems that interact continuously with their environment at their own speed a typical example is the web and 3 reactive systems that interact continuously with their environment at a speed imposed by the environment a typical example is the automatic flight control system of modern airplanes reactive systems must therefore react to stimuli from the environment within strict time bounds for this reason they are often also called real time systems and are found often in embedded systems synchronous programming also synchronous reactive programming or srp is a computer programming paradigm supported by synchronous programming languages the principle of srp is to make the same abstraction for programming languages as the synchronous abstraction in digital circuits synchronous circuits are indeed designed at a high level of abstraction where the timing characteristics of the electronic transistors are neglected each gate of the circuit or and is therefore assumed to compute its result instantaneously each wire is assumed to transmit its signal instantaneously a synchronous circuit is clocked and