it is a logical assertion sometimes checked within the code by an assertion call knowing its invariant s is essential in understanding the effect of a loop in formal program verification particularly the floyd hoare approach loop invariants are expressed by formal predicate logic and used to prove properties of loops and by extension algorithms that employ loops usually correctness properties the loop invariants will be true on entry into a loop and following each iteration so that on exit from the loop both the loop invariants and the loop termination condition can be guaranteed from a programming methodology viewpoint the loop invariant can be viewed as a more abstract specification of the loop which characterizes the deeper purpose of the loop beyond the details of this implementation a survey article covers fundamental algorithms from many areas of computer science searching sorting optimization arithmetic etc characterizing each of them from the viewpoint of its invariant because of the similarity of loops and recursive programs proving partial correctness of loops with invariants is very similar to proving correctness of recursive programs via induction in fact the loop invariant is often the same as the inductive hypothesis to be proved for a