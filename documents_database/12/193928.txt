when a program is run memory is often dynamically allocated in two places the stack and the heap memory is continuously allocated on a stack but not on a heap thus reflective of their names stack also refers to a programming construct thus to differentiate it this stack is referred to as the program s runtime stack technically once a block of memory has been allocated on the stack it cannot be easily removed as there can be other blocks of memory that were allocated before it each time a function is called in a program a block of memory is allocated on top of the runtime stack called the activation record or stack pointer at a high level an activation record allocates memory for the function s parameters and local variables declared in the function programmers commonly use stack tracing during interactive and post mortem debugging end users may see a stack trace displayed as part of an error message which the user can then report to a programmer a stack trace allows tracking the sequence of nested functions called up to the point where the stack trace is generated in a post mortem scenario this extends up to