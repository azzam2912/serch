this execution may be immediate as in a synchronous callback or it might happen at a later time as in an asynchronous callback programming languages support callbacks in different ways often implementing them with subroutines lambda expressions blocks or function pointers there are two types of callbacks differing in how they control data flow at runtime blocking callbacks also known as synchronous callbacks or just callbacks and deferred callbacks also known as asynchronous callbacks while blocking callbacks are invoked before a function returns in the c example below which illustrates a blocking callback it is function deferred callbacks may be invoked after a function returns deferred callbacks are often used in the context of i o operations or event handling and are called by interrupts or by a different thread in case of multiple threads due to their nature blocking callbacks can work without interrupts or multiple threads meaning that blocking callbacks are not commonly used for synchronization or delegating work to another thread callbacks are used to program applications in windowing systems in this case the application supplies a reference to a specific custom callback function for the operating system to call which then calls this application specific function