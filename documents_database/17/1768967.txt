it also provides a full set of tools to integrate and cross compile an entire linux distribution in the linux world when building software many parameters are auto detected based on the host system like installed libraries and system configurations through autotools configure scripts for example when one wants to build for an embedded target cross compilation most of the detected parameters are incorrect i e host configuration is not the same as the embedded target configuration without scratchbox2 one has to manually set many parameters and hack the configure process to be able to generate code for the embedded target scratchbox2 allows one to set up a virtual environment that will trick the autotools and executables into thinking that they are directly running on the embedded target with its configuration moreover scratchbox2 provides a technology called cpu transparency that goes further in that area with cpu transparency executables built for the host cpu or for the target cpu could be executed directly on the host with sbox2 handling the task to cpu emulate if needed to run a program compiled for the target cpu so a build process could mix the usage of program built for different cpu architectures