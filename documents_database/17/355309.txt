this kind of stack is also known as an execution stack program stack control stack run time stack or machine stack and is often shortened to just the stack although maintenance of the call stack is important for the proper functioning of most software the details are normally hidden and automatic in high level programming languages many computer instruction sets provide special instructions for manipulating stacks a call stack is used for several related purposes but the main reason for having one is to keep track of the point to which each active subroutine should return control when it finishes executing an active subroutine is one that has been called but is yet to complete execution after which control should be handed back to the point of call such activations of subroutines may be nested to any level recursive as a special case hence the stack structure if for example a subroutine codice 1 calls a subroutine codice 2 from four different places codice 2 must know where to return when its execution completes to accomplish this the address following the instruction that jumps to codice 2 the return address is pushed onto the call stack with each call since