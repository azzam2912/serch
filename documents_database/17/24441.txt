normally a string of characters such as the words hello there is represented using a fixed number of bits per character as in the ascii code when a string is converted to arithmetic encoding frequently used characters will be stored with fewer bits and not so frequently occurring characters will be stored with more bits resulting in fewer bits used in total arithmetic coding differs from other forms of entropy encoding such as huffman coding in that rather than separating the input into component symbols and replacing each with a code arithmetic coding encodes the entire message into a single number an arbitrary precision fraction q where 0 0 q asymmetric numeral systems allows for faster implementations thanks to directly operating on a single natural number representing the current information in the simplest case the probability of each symbol occurring is equal for example consider a set of three symbols a b and c each equally likely to occur simple block encoding would require 2 bits per symbol which is wasteful one of the bit variations is never used that is to say a 00 b 01 and c 10 but 11 is unused a more efficient solution is to