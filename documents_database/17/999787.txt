some variants copy the string tails into the buckets as the buckets grow beyond a predetermined threshold the buckets are burst into tries giving the sort its name a more recent variant uses a bucket index with smaller sub buckets to reduce memory usage most implementations delegate to multikey quicksort an extension of three way radix quicksort to sort the contents of the buckets by dividing the input into buckets with common prefixes the sorting can be done in a cache efficient manner burstsort was introduced as a sort that is similar to msd radix sort but is faster due to being aware of caching and related radixes being stored closer to each other due to specifics of trie structure it exploits specifics of strings that are usually encountered in real world and although asymptotically it is the same as radix sort with time complexity of w word length and n number of strings to be sorted but due to better memory distribution it tends to be twice as fast on big data sets of strings