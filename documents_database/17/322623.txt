the result is that the number of children of every internal node is at most the radix of the radix tree where is a positive integer and a power of 2 having 1 unlike regular trees edges can be labeled with sequences of elements as well as single elements this makes radix trees much more efficient for small sets especially if the strings are long and for sets of strings that share long prefixes unlike regular trees where whole keys are compared en masse from their beginning up to the point of inequality the key at each node is compared chunk of bits by chunk of bits where the quantity of bits in that chunk at that node is the radix of the radix trie when the is 2 the radix trie is binary i e compare that node s 1 bit portion of the key which minimizes sparseness at the expense of maximizing trie depth i e maximizing up to conflation of nondiverging bit strings in the key when is an integer power of 2 having 4 then the radix trie is an ary trie which lessens the depth of the radix trie at the expense of potential sparseness