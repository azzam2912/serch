the main idea of lowerunits is to exploit the following fact the algorithm targets exactly the class of global redundancy stemming from multiple resolutions with unit clauses the algorithm takes its name from the fact that when this rewriting is done and the resulting proof is displayed as a dag directed acyclic graph the unit node formula 2 appears lower i e closer to the root than it used to appear in the original proof a naive implementation exploiting theorem would require the proof to be traversed and fixed after each unit node is lowered it is possible however to do better by first collecting and removing all the unit nodes in a single traversal and afterwards fixing the whole proof in a single second traversal finally the collected and fixed unit nodes have to be reinserted at the bottom of the proof care must be taken with cases when a unit node formula 6 occurs above in the subproof that derives another unit node formula 2 in such cases formula 2 depends on formula 6 let formula 10 be the single literal of the unit clause of formula 6 then any occurrence of formula 12 in the subproof above