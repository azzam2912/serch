a common aspect of an abi is the calling convention which determines how data is provided as input to or read as output from computational routines examples are the x86 calling conventions adhering to an abi which may or may not be officially standardized is usually the job of a compiler operating system or library author however an application programmer may have to deal with an abi directly when writing a program in a mix of programming languages which can be achieved by using foreign function calls abis cover details such as a complete abi such as the intel binary compatibility standard ibcs allows a program from one operating system supporting that abi to run without modifications on any other such system provided that necessary shared libraries are present and similar prerequisites are fulfilled other abis standardize details such as the c name mangling exception propagation and calling convention between compilers on the same platform but do not require cross platform compatibility an embedded application binary interface eabi specifies standard conventions for file formats data types register usage stack frame organization and function parameter passing of an embedded software program for use with an embedded operating system compilers that support