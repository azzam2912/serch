unlike the multilevel feedback queue items get assigned to a particular level at insert using some predefined algorithm and thus cannot be moved to another level items get removed from the queue by removing all items from a level and then moving to the next if an item is added to a level above the fetching restarts from there each level of the queue is free to use its own scheduling thus adding greater flexibility than merely having multiple levels in a queue multi level queue scheduling algorithm is used in scenarios where the processes can be classified into groups based on property like process type cpu time io access memory size etc one general classification of the processes is foreground processes and background processes in a multi level queue scheduling algorithm there will be n number of queues where n is the number of groups the processes are classified into each queue will be assigned a priority and will have its own scheduling algorithm like round robin scheduling or fcfs for the process in a queue to execute all the queues of priority higher than it should be empty meaning the process in those high priority queues should have