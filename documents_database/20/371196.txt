this type of diagram was developed in 1972 by isaac nassi and ben shneiderman who were both graduate students at suny stony brook these diagrams are also called structograms as they show a program s structures following a top down design the problem at hand is reduced into smaller and smaller subproblems until only simple statements and control flow constructs remain nassi shneiderman diagrams reflect this top down decomposition in a straightforward way using nested boxes to represent subproblems consistent with the philosophy of structured programming nassi shneiderman diagrams have no representation for a goto statement nassi shneiderman diagrams are only rarely used for formal programming their abstraction level is close to structured program code and modifications require the whole diagram to be redrawn nonetheless they can be useful for sketching processes and high level designs nassi shneiderman diagrams are almost isomorphic with flowcharts everything that can be represented with a nassi shneiderman diagram can also be represented with a flowchart for flowcharts of programs almost everything that can be represent with a flowchart can also be represented with a nassi shneiderman diagram the exceptions are constructs like goto and the c programming language break and continue statements for loops