it achieves this by using a fractal tree index it is scalable acid and mvcc compliant provides indexing based query improvements offers online schema modifications and reduces slave lag for both hard disk drives and flash memory tokudb is included in percona server mariadb and nagios based opmon tokudb uses a fractal tree index tree data structure that keeps data sorted and allows searches and sequential access in the same time as a b tree but with insertions and deletions that are asymptotically faster than a b tree fractal trees also allow for messages to be injected into the tree in such a fashion that schema changes such as adding or dropping a column or adding an index can be done online and in the background as a result more indexes can be maintained without a drop in performance this is because adding data to indexes tends to stress the performance of b trees but performs well in fractal tree indexes fractal tree indexes can be applied to a number of applications characterized by near real time analysis of streaming data they can be used as the storage layer of a database or as the storage layer of a file