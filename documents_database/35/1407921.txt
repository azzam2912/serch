it was developed in 2009 by shay gal on at eembc and is intended to become an industry standard replacing the antiquated dhrystone benchmark the code is written in c and contains implementations of the following algorithms list processing find and sort matrix manipulation common matrix operations state machine determine if an input stream contains valid numbers and crc the code is under the apache license 2 0 and is free of cost to use but ownership is retained by the consortium and publication of modified versions under the coremark name prohibited the crc algorithm serves a dual function it provides a workload commonly seen in embedded applications and ensures correct operation of the coremark benchmark essentially providing a self checking mechanism specifically to verify correct operation a 16 bit crc is performed on the data contained in elements of the linked list to ensure compilers cannot pre compute the results at compile time every operation in the benchmark derives a value that is not available at compile time furthermore all code used within the timed portion of the benchmark is part of the benchmark itself no library calls coremark draws on the strengths that made dhrystone so resilient it