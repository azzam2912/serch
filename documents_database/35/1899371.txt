the language was first presented in 1989 by carsten k gomard and neil d jones it later resurfaced in their book with peter sestoft in 1993 and in john hatcliff s lecture notes in 1998 the below describes fcl as it appeared in john hatcliff s lecture notes fcl is an imperative programming language close to the way a von neumann computer executes a program a program is executed sequentially by following a sequence of commands while maintaining an implicit state i e the global memory fcl has no concept of procedures but does provide conditional and unconditional jumps fcl lives up to its name as the abstract call graph of an fcl program is a straightforward flow chart an fcl program takes as input a finite series of named values as parameters and produces a value as a result we specify the syntax of fcl using backus naur form an fcl program is a list of formal parameter declarations an entry label and a sequence of basic blocks initially the language only allows non negative integer variables a basic block consists of a label a list of assignments and a jump an assignment assigns a variable to an expression