the range of virtual addresses usually starts at a low address and can extend to the highest address allowed by the computer s instruction set architecture and supported by the operating system s pointer size implementation which can be 4 bytes for 32 bit or 8 bytes for 64 bit os versions this provides several benefits one of which is security through process isolation assuming each process is given a separate address space when a new application on a 32 bit os is executed the process has a vas each one of the memory addresses from 0 to 2 1 in that space can have a single byte as a value initially none of them have values represents no value using or setting values in such a vas would cause a memory exception then the application s executable file is mapped into the vas addresses in the process vas are mapped to bytes in the exe file the os manages the mapping the v s are values from bytes in the mapped file then required dll files are mapped this includes custom libraries as well as system ones such as kernel32 dll and user32 dll the process then starts executing