the programs in a pipeline operate on a sequential stream of records a program writes records that are read by the next program in the pipeline any program can be combined with any other because reading and writing is done through a device independent interface cms pipelines provides a cms command pipe the argument string to the pipe command is the pipeline specification pipe selects programs to run and chains them together in a pipeline to pump data through because cms programs and utilities don t provide a device independent stdin and stdout interface cms pipelines has a built in library of programs that can be called in a pipeline specification these built in programs interface to the operating system and perform many utility functions data on cms is structured in logical records rather than a stream of bytes for textual data a line of text corresponds to a logical record in cms pipelines the data is passed between the stages as logical records cms pipelines users issue pipeline commands from the terminal or in exec procedures users can write programs in rexx that can be used in addition to the built in programs a simple example that reads a