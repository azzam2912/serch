this approach pioneered by ml in 1973 permits writing common functions or types that differ only in the set of types on which they operate when used thus reducing duplication such software entities are known as generics in python ada c delphi eiffel f java rust swift typescript and visual basic net they are known as parametric polymorphism in ml scala julia and haskell the haskell community also uses the term generic for a related but somewhat different concept templates in c and d and parameterized types in the influential 1994 book design patterns the term generic programming was originally coined by david musser and alexander stepanov in a more specific sense than the above to describe a programming paradigm whereby fundamental requirements on types are abstracted from across concrete examples of algorithms and data structures and formalized as concepts with generic functions implemented in terms of these concepts typically using language genericity mechanisms as described above generic programming is defined in as follows generic programming paradigm is an approach to software decomposition whereby fundamental requirements on types are abstracted from across concrete examples of algorithms and data structures and formalized as concepts analogously to the abstraction of algebraic theories