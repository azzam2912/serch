the language was initially developed in support of darpa agent markup language with a goal of explaining how automated theorem provers atp derive conclusions from a set of axioms information inference steps inference rules and agents are the three main building blocks of the language in the context of an inference step information can play the role of antecedent also called premise and conclusion information can also play the role of axiom that is basically a conclusion with no antecedents pml uses the broad philosophical definition of agent as opposed to any other more specific definition of agent the use of pml in subsequent projects evolved the language in new directions broadening its capability to represent provenance knowledge beyond the realm of atps and automated reasoning the original set of requirements were relaxed to include the following information originally represented as logical sentences in the knowledge interchange format were allowed to be information written in any language including the english language and inference rules originally defined as patterns over antecedents and conclusions of inference steps were allowed to be underspecified as long as they were identified and named these relaxations were essential to explain how knowledge is extracted from text