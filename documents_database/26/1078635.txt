for example java is said to be memory safe because its runtime error detection checks array bounds and pointer dereferences in contrast c and c allow arbitrary pointer arithmetic with pointers implemented as direct memory addresses with no provision for bounds checking and thus are termed memory unsafe memory errors were first considered in the context of resource management and time sharing systems in an effort to avoid problems such as fork bombs developments were mostly theoretical until the morris worm which exploited a buffer overflow in fingerd the field of computer security developed quickly thereafter escalating with multitudes of new attacks such as the return to libc attack and defense techniques such as the non executable stack and address space layout randomization randomization prevents most buffer overflow attacks and requires the attacker to use heap spraying or other application dependent methods to obtain addresses although its adoption has been slow however deployments of the technology are typically limited to randomizing libraries and the location of the stack diehard its redesign dieharder and the allinea distributed debugging tool are special heap allocators that allocate objects in their own random virtual memory page allowing invalid reads and writes to be stopped