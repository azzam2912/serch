local variable references in the function or block in which it is declared override the same variable name in the larger scope in programming languages with only two levels of visibility local variables are contrasted with global variables on the other hand many algol derived languages allow any number of nested levels of visibility with private variables functions constants and types hidden within them either by nested blocks or nested functions local variables are fundamental to procedural programming and more generally modular programming variables of local scope are used to avoid issues with side effects that can occur with global variables local variables may have a lexical or dynamic scope though lexical static scoping is far more common in lexical scoping or lexical scope also called static scoping or static scope if a variable name s scope is a certain block then its scope is the program text of the block definition within that block s text the variable name exists and is bound to the variable s value but outside that block s text the variable name does not exist by contrast in dynamic scoping or dynamic scope if a variable name s scope is a certain block then