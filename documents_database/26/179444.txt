it is commonly used on linux sane differs from twain in that it is cleanly separated into front ends user programs and back ends scanner drivers whereas a twain driver handles the user interface as well as communications with the scanner hardware a sane driver only provides an interface with the hardware and describes a number of options which drive each scan these options specify parameters such as the resolution of the scan the scan area colour model etc each option has a name and information about its type units and range or possible values e g enumerated list by convention there are several well known options that front ends can supply using convenient gui interaction e g the scan area options can be set by dragging a rectangular outline over a preview image other options can be presented using gui elements appropriate to their type e g sliders drop down lists etc one consequence of this separation is that network scanning is easily implemented with no special handling in either the front ends or back ends on a host with a scanner the saned daemon runs and handles network requests on client machines a net back end driver connects