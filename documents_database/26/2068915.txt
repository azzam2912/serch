api description languages are sometimes called interface description languages idls the structured description might be used to generate documentation for human programmers such documentation may be easier to read than free form documentation since all documentation generated by the same tool follows the same formatting conventions additionally the description language is usually precise enough to allow automated generation of various software artifacts like libraries to access the api from various programming languages which takes the burden of manually creating them off the programmers there are two previous major description languages wsdl2 0 web services description language and wadl web application description language neither is widely adopted in the industry for describing restful apis citing poor human readability of both and wadl being actually unable to fully describe a restful api an alternative approach to building restful apis is known under the acronym hateoas hypermedia as the engine of application state in this approach the client software is not written to a static interface description shared through documentation instead the client is given a set of entry points and the api is discovered dynamically through interaction with these endpoints hateoas was introduced in roy fielding s doctoral thesis architectural styles and