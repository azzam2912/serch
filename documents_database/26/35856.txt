the idea behind exokernels is to force as few abstractions as possible on application developers enabling them to make as many decisions as possible about hardware abstractions exokernels are tiny since functionality is limited to ensuring protection and multiplexing of resources which is considerably simpler than conventional microkernels implementation of message passing and monolithic kernels implementation of high level abstractions implemented applications are called library operating systems they may request specific memory addresses disk blocks etc the kernel only ensures that the requested resource is free and the application is allowed to access it this low level hardware access allows the programmer to implement custom abstractions and omit unnecessary ones most commonly to improve a program s performance it also allows programmers to choose what level of abstraction they want high or low exokernels can be seen as an application of the end to end principle to operating systems in that they do not force an application program to layer its abstractions on top of other abstractions that were designed with different requirements in mind for example in the mit exokernel project the cheetah web server stores preformatted internet protocol packets on the disk the kernel provides safe access to