it has been developed by the sable research group at mcgill university soot provides four intermediate representations for use through its api for other analysis programs to access and build upon the current soot software release also contains detailed program analyses that can be used out of the box such as context sensitive flow insensitive points to analysis call graph analysis and domination analysis answering the question must event a follow event b it also has a decompiler called dava soot is free software available under the gnu lesser general public license lgpl in 2010 two research papers on soot and were selected as ibm cascon first decade high impact papers among 12 other papers from the 425 entries jimple is an intermediate representation of a java program designed to be easier to optimize than java bytecode it is typed has a concrete syntax and is based on three address code jimple includes only 15 different operations thus simplifying flow analysis by contrast java bytecode includes over 200 different operations unlike java bytecode in jimple local and stack variables are typed and jimple is inherently type safe converting to jimple or jimplifying after simplifying is conversion of bytecode to three