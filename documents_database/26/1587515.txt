in such a processor any instruction within the instruction window can be executed when its operands are ready out of order processors derive their name because this may occur out of order if operands to a younger instruction are ready before those of an older instruction the instruction window has a finite size and new instructions can enter the window usually called dispatch or allocate only when other instructions leave the window usually called retire or commit instructions enter and leave the instruction window in program order and an instruction can only leave the window when it is the oldest instruction in the window and it has been completed hence the instruction window can be seen as a sliding window in which the instructions can become out of order all execution within the window is speculative i e side effects are not applied outside the cpu until it is committed in order to support asynchronous exception handling like interrupts this paradigm is also known as restricted dataflow because instructions within the window execute in dataflow order not necessarily in program order but the window in which this occurs is restricted of finite size the instruction window is distinct from pipelining