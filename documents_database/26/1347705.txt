impromptu is built around the scheme language which is a member of the lisp family of languages the source code of its core has been opened as the extempore project the environment allows to make changes to a program at runtime so variables and functions may be redefined and the changes take effect immediately a programmer can also create and schedule code for future execution as well as data events such as notes and graphics objects once an event is scheduled execution continues looping is performed by using an idiom called temporal recursion which works by having a function asynchronously schedule a future call to itself as its final action the library allows communicating with audio units for audio synthesis and with graphics layers such as quicktime quartz core image opengl for video composition code written in objective c can be called from the editor and also objective c frameworks can perform calls to the scheme interpreter impromptu s scheme interpreter was initially built from the tinyscheme 1 35 baseline but it has been substantially modified since to better suit the live coding context a real time garbage collector and objective c integration were added also a new statically typed