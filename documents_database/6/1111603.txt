it was introduced in the original pentium processor but it was only publicly documented by intel with the release of the pentium pro the cpuid instruction can be used to identify the availability of pse on x86 cpus imagine the following scenario an application program requests a 1 mib memory block in order to fulfill this request an operating system that supports paging and that is running on older x86 cpus will have to allocate 256 pages of 4 kib each an overhead of 1 kib of memory is required for maintaining page directories and page tables when accessing this 1 mib memory each of the 256 page entries would be cached in the translation lookaside buffer tlb a cache that remembers virtual address to physical address translations for faster lookup on subsequent memory requests cluttering the tlb is possibly one of the largest disadvantages of having several page entries for what could have been allocated in one single memory block if the tlb gets filled then a tlb entry would have to be freed the page directory and page tables would have to be walked in memory and finally the memory would be accessed and the new entry would