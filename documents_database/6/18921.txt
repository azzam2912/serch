it was developed and patented by the mit artificial intelligence laboratory and implemented in computer hardware in a number of lisp machines derived from the mit cadr cdr coding is in fact a fairly general idea whenever a data object a ends in a reference to another data structure b we can instead place the structure b itself there overlapping and running off the end of a by doing this we free the space required by the reference which can add up if done many times and also improve locality of reference enhancing performance on modern machines the transformation is especially effective for the cons based lists it was created for we free about half of the space for each node we perform this transformation on it is not always possible to perform this substitution because there might not be a large enough chunk of free space beyond the end of a thus some objects will end in a real reference and some with the referenced object and the machine must be able to tell by reading the final cell which one it is this can be accomplished with some inefficiency in software by the use of tagged pointers which