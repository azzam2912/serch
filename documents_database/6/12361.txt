the letters stand for stack environment control dump the internal registers of the machine the registers stack control and dump point to some realisations of stacks and environment points to some realisation of an associative array the machine was the first to be specifically designed to evaluate lambda calculus expressions it was originally described by peter j landin in the mechanical evaluation of expressions in 1964 the description published by landin was fairly abstract and left many implementation choices open like an operational semantics hence the secd machine is often presented in a more detailed form such as peter henderson s lispkit lisp compiler which has been distributed since 1980 since then it has been used as the target for several other experimental compilers in 1989 researchers at the university of calgary worked on a hardware implementation of the machine d a turner 2012 points out that the revised report on algol 60 naur 1963 specifies a procedure call by a copying rule which avoids variable capture with a systematic change of identifiers this method works in the algol 60 implementation but in a functional programming language where functions are first class citizens a free variable on a call stack