the stride cannot be smaller than the element size but can be larger indicating extra space between elements an array with stride of exactly the same size as the size of each of its elements is contiguous in memory such arrays are sometimes said to have unit stride unit stride arrays are sometimes more efficient than non unit stride arrays but non unit stride arrays can be more efficient for 2d or multi dimensional arrays depending on the effects of caching and the access patterns used this can be attributed to the principle of locality specifically spatial locality arrays may have a stride larger than their elements width in bytes in at least three cases many languages including c and c allow structures to be padded to better take advantage either of the word length and or cache line size of the machine for example struct a struct a myarray 100 in the above code snippet codice 1 might well turn out to have a stride of eight bytes rather than five 4 bytes for the int plus one for the char if the c code were compiled for a 32 bit architecture and the compiler had optimized as is