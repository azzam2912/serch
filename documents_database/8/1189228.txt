in this context a parser is a function accepting strings as input and returning some structure as output typically a parse tree or a set of indices representing locations in the string where parsing stopped successfully parser combinators enable a recursive descent parsing strategy that facilitates modular piecewise construction and testing this parsing technique is called combinatory parsing parsers built using combinators are straightforward to construct readable modular well structured and easily maintainable they have been used extensively in the prototyping of compilers and processors for domain specific languages such as natural language interfaces to databases where complex and varied semantic actions are closely integrated with syntactic processing in 1989 richard frost and john launchbury demonstrated use of parser combinators to construct natural language interpreters graham hutton also used higher order functions for basic parsing in 1992 s d swierstra also exhibited the practical aspects of parser combinators in 2001 in 2008 frost hafiz and callaghan described a set of parser combinators in haskell that solve the long standing problem of accommodating left recursion and work as a complete top down parsing tool in polynomial time and space in any programming language that has first class functions parser combinators can