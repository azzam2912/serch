two situations are considered 8 bit clean environments and environments that forbid use of byte values that have the high bit set originally such prohibitions were to allow for links that used only seven data bits but they remain in the standards and so software must generate messages that comply with the restrictions standard compression scheme for unicode and binary ordered compression for unicode are excluded from the comparison tables because it is difficult to simply quantify their size a utf 8 file that contains only ascii characters is identical to an ascii file legacy programs can generally handle utf 8 encoded files even if they contain non ascii characters for instance the c printf function can print a utf 8 string as it only looks for the ascii character to define a formatting string and prints all other bytes unchanged thus non ascii characters will be output unchanged utf 16 and utf 32 are incompatible with ascii files and thus require unicode aware programs to display print and manipulate them even if the file is known to contain only characters in the ascii subset because they contain many zero bytes the strings cannot be manipulated by normal null terminated