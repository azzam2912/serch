programmers have always reused sections of code templates functions and procedures software reuse as a recognized area of study in software engineering however dates only from 1968 when douglas mcilroy of bell laboratories proposed basing the software industry on reusable components code reuse aims to save time and resources and reduce redundancy by taking advantage of assets that have already been created in some form within the software product development process the key idea in reuse is that parts of a computer program written at one time can be or should be used in the construction of other programs written at a later time code reuse may imply the creation of a separately maintained version of the reusable assets while code is the most common resource selected for reuse other assets generated during the development cycle may offer opportunities for reuse software components test suites designs documentation and so on the software library is a good example of code reuse programmers may decide to create internal abstractions so that certain parts of their program can be reused or may create custom libraries for their own use some characteristics that make software more easily reusable are modularity loose coupling high cohesion