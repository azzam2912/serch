jna s design aims to provide native access in a natural way with a minimum of effort no boilerplate or generated glue code is required the jna library uses a small native library called foreign function interface library libffi to dynamically invoke native code the jna library uses native functions allowing code to load a library by name and retrieve a pointer to a function within that library and uses libffi library to invoke it all without static bindings header files or any compile phase the developer uses a java interface to describe functions and structures in the target native library this makes it quite easy to take advantage of native platform features without incurring the high development overhead of configuring and building jni code jna is built and tested on macos microsoft windows freebsd openbsd solaris linux aix windows mobile and android it is also possible to tweak and recompile the native build configurations to make it work on most other platforms that run java the following table shows an overview of types mapping between java and native code and supported by the jna library note the meaning of tchar changes between char and wchar t according to some