they form the basis for the development of aspects such cross cutting concerns do not fit cleanly into object oriented programming or procedural programming cross cutting concerns can be directly responsible for tangling or system inter dependencies within a program because procedural and functional language constructs consist entirely of procedure calling there is no semantic through which two goals the capability to be implemented and the related cross cutting concern can be addressed simultaneously as a result the code addressing the cross cutting concern must be scattered or duplicated across the various related locations resulting in a loss of modularity aspect oriented programming aims to encapsulate cross cutting concerns into aspects to retain modularity this allows for the clean isolation and reuse of code addressing the cross cutting concern by basing designs on cross cutting concerns software engineering benefits can include modularity and simplified maintenance examples of concerns that tend to be cross cutting include