a continuation implements reifies the program control state i e the continuation is a data structure that represents the computational process at a given point in the process s execution the created data structure can be accessed by the programming language instead of being hidden in the runtime environment continuations are useful for encoding other control mechanisms in programming languages such as exceptions generators coroutines and so on the current continuation or continuation of the computation step is the continuation that from the perspective of running code would be derived from the current point in a program s execution the term continuations can also be used to refer to first class continuations which are constructs that give a programming language the ability to save the execution state at any point and return to that point at a later point in the program possibly multiple times the earliest description of continuations was made by adriaan van wijngaarden in september 1964 wijngaarden spoke at the ifip working conference on formal language description languages held in baden bei wien austria as part of a formulation for an algol 60 preprocessor he called for a transformation of proper procedures into continuation passing style though