this language is an augmented version of the imperative modula 2 language with logic programming features and convenient backtracking capability it is small strongly typed and combines constraint programming a limited number of features inspired by logic programming and supports imperative paradigms the language advocates declarative programming the designers claim that search oriented solutions built with it are substantially simpler than their counterparts written in purely imperative or logic programming style alma 0 provides natural high level constructs for the construction of search trees since the designers of alma 0 wanted to create a distinct and substantially simpler proposal than previous attempts at integration of declarative programming constructs such as automatic backtracking into imperative programming the design of alma 0 was guided by the following four principles alma 0 can be viewed not only as a specific and concrete programming language proposal but also as an example of a generic method for extending any imperative programming language with features that support declarative programming the feasibility of the alma 0 approach has been demonstrated through a full implementation of the language including a description of its semantics for a subset of modula 2 the implemented features in alma 0 include the