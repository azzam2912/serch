virtual classes are analogous to virtual functions the run time type of a virtual class depends on the run time type of an object of the outer class just like the run time type of an object decides which virtual function should be used a run time instance type of the outer class object not only decides on the polymorphic type of its own type object but also on a whole family tree of virtual class members virtual classes solve the extensibility problem of extending data abstraction with new functions and representations like virtual functions virtual classes follow the same rules of definition overriding and reference when a derived class inherits from a base class it must define or override the virtual inner classes it inherited from the base class an object of the child class may be referred to by a reference or pointer of the parent class type or the child class type when the reference or pointer invoke the virtual inner classes the derived class s implementation will be called if the object is of the derived class type the type of the outer class determines the run time of the inner virtual class a method with