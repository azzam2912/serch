a program with high test coverage measured as a percentage has had more of its source code executed during testing which suggests it has a lower chance of containing undetected software bugs compared to a program with low test coverage many different metrics can be used to calculate test coverage some of the most basic are the percentage of program subroutines and the percentage of program statements called during execution of the test suite test coverage was among the first methods invented for systematic software testing the first published reference was by miller and maloney in communications of the acm in 1963 to measure what percentage of code has been exercised by a test suite one or more coverage criteria are used coverage criteria are usually defined as rules or requirements which a test suite needs to satisfy there are a number of coverage criteria the main ones being for example consider the following c function assume this function is a part of some bigger program and this program was run with some test suite condition coverage does not necessarily imply branch coverage for example consider the following fragment of code condition coverage can be satisfied by two tests however