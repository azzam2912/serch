an obstack is a stack of objects data items which is dynamically managed it implements a region based memory management scheme obstack code typically provides c macros which take care of memory allocation and management for the user basically obstacks are used as a form of memory management which can be more efficient and less difficult to implement than malloc free in several situations for example say one needs to set up a stack for handling data items whose number grows for a while and then reach a final form such a stack could be defined in obstack h once the object is allocated a new chunk of memory in obstack it must be freed after its use the interfaces for using obstacks may be defined either as functions or as macros depending on the compiler the obstack facility works with all c compilers in an old fashioned non iso c compiler all the obstack functions are actually defined only as macros you can call these macros like functions but you cannot use them in any other way for example you cannot take their address calling the macros requires a special precaution namely the first operand the obstack pointer should