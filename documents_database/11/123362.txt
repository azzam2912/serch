this involves ordering events based on the potential causal relationship of pairs of events in a concurrent system especially asynchronous distributed systems it was formulated by leslie lamport in java specifically a happens before relationship is a guarantee that memory written to by statement a is visible to statement b that is that statement a completes its write before statement b starts its read the happened before relation is formally defined as the least strict partial order on events such that if there are other causal relationships between events in a given system such as between the creation of a process and its first event these relationships are also added to the definition like all strict partial orders the happened before relation is transitive irreflexive and antisymmetric i e the processes that make up a distributed system have no knowledge of the happened before relation unless they use a logical clock like a lamport clock or a vector clock this allows one to design algorithms for mutual exclusion and tasks like debugging or optimising distributed systems