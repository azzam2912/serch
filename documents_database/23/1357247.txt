in general collecting system constants into classes independent of behaviour might create a poor object oriented design because it is often a sign of low cohesion it is for these reasons that implementing constants interfaces may be considered to be an anti pattern use of this pattern has a few other downsides note that the java libraries use constant interface pattern themselves proving that it may be a reasonable choice in some situations before the line marked with an asterisk is added running class1 prints 1 after adding the line class1 prints 2 both versions compile without warnings or errors many of the pitfalls of the anti pattern can be avoided by converting the constants interface to a proper class with no instances this still leaves the original intent of the pattern mostly un addressed i e there is no syntax for accessing the constants unqualified however since java 5 consider using static import to achieve the same goal the constants can also be imported en masse by adding a import static constants statement this achieves the same goals as using an interface allowing the constants to be referenced without the namespace to varying degrees the issues listed above have