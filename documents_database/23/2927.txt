in many languages the class name is used as the name for the class the template itself the name for the default constructor of the class a subroutine that creates objects and as the type of objects generated by instantiating the class these distinct concepts are easily conflated when an object is created by a constructor of the class the resulting object is called an instance of the class and the member variables specific to the object are called instance variables to contrast with the class variables shared across the class in some languages classes are only a compile time feature new classes cannot be declared at run time while in other languages classes are first class citizens and are generally themselves objects typically of type or similar in these languages a class that creates classes is called a metaclass in casual use people often refer to the class of an object but narrowly speaking objects have type the interface namely the types of member variables the signatures of member functions methods and properties these satisfy at the same time a class has an implementation specifically the implementation of the methods and can create objects of a given type with