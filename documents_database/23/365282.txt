twisted is based on the event driven programming paradigm which means that users of twisted write short callbacks which are called by the framework twisted is designed for complete separation between logical protocols usually relying on stream based connection semantics such as http or pop3 and physical transport layers supporting such stream based semantics such as files sockets or ssl libraries connection between a logical protocol and a transport layer happens at the last possible moment just before information is passed into the logical protocol instance the logical protocol is informed of the transport layer instance and can use it to send messages back and to check for the peer s identity note that it is still possible in protocol code to deeply query the transport layer on transport issues such as checking a client side ssl certificate naturally such protocol code will fail raise an exception if the transport layer does not support such semantics central to the twisted application model is the concept of a deferred elsewhere called a future a deferred is an instance of a class designed to receive and process a result which has not been computed yet for example because it is based on