it has o n time complexity making it inefficient on large lists and generally performs worse than the similar insertion sort selection sort is noted for its simplicity and it has performance advantages over more complicated algorithms in certain situations particularly where auxiliary memory is limited the algorithm divides the input list into two parts the sublist of items already sorted which is built up from left to right at the front left of the list and the sublist of items remaining to be sorted that occupy the rest of the list initially the sorted sublist is empty and the unsorted sublist is the entire input list the algorithm proceeds by finding the smallest or largest depending on sorting order element in the unsorted sublist exchanging swapping it with the leftmost unsorted element putting it in sorted order and moving the sublist boundaries one element to the right uniqueness of selection sort when compared to other sorting techniques the time efficiency of selection sort is quadratic so there exists a number of sorting techniques which have better time complexity than selection sort even then considering the number of swaps made the number of swaps will be n 1 both in