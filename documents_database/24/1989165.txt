it is similar to quicksort but it is a cache oblivious algorithm designed for a setting where the number of elements to sort is too large to fit in a cache where operations are done in the external memory model the number of memory transfers it needs to perform a sort of formula 1 items on a machine with cache of size formula 2 and cache lines of length formula 3 is formula 4 under the tall cache assumption that formula 5 this number of memory transfers has been shown to be asymptotically optimal for comparison sorts this distribution sort also achieves the asymptotically optimal runtime complexity of formula 6 distribution sort operates on a contiguous array of formula 1 elements to sort the elements it performs the following as mentioned in step 2 above the goal of the distribution step is to distribute the sorted subarrays into q buckets formula 15 the distribution step algorithm maintains two invariants the first is that each bucket has size at most formula 16 at any time and any element in bucket formula 13 is no larger than any element in bucket formula 14 the second is that every bucket has an associated