this is a generalization of single dispatch polymorphism where a function or method call is dynamically dispatched based on the derived type of the object on which the method has been called multiple dispatch routes the dynamic dispatch to the implementing function or method using the combined characteristics of one or more arguments developers of computer software typically organize source code into named blocks variously called subroutines procedures subprograms functions or methods the code in the function is executed by calling it executing a piece of code that references its name this transfers control temporarily to the called function when the function s execution has completed control is typically transferred back to the instruction in the caller that follows the reference function names are usually selected so as to be descriptive of the function s purpose it is sometimes desirable to give several functions the same name often because they perform conceptually similar tasks but operate on different types of input data in such cases the name reference at the function call site is not sufficient for identifying the block of code to be executed instead the number and type of the arguments to the function call are also used