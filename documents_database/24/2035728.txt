for many tasks it is important to have a data structure that can provide a consistent view of the state of the memory in practice it turns out that it is not possible to get such a consistent state of the memory by just accessing one shared register after another since the values stored in individual registers can be changed at any time during this process to solve this problem snapshot objects store a vector of n components and provide the following two atomic operations update i v changes the value in the i th component to v and scan returns the values stored in all n components snapshot objects can be constructed using atomic single writer multi reader shared registers in general one distinguishes between single writer multi reader swmr snapshot objects and multi writer multi reader mwmr snapshot objects in a swmr snapshot object the number of components matches the number of processes and only one process p is allowed to write to the memory position i and all the other processes are allowed to read the memory in contrast in a mwmr snapshot object all processes are allowed to write to all positions of the memory and