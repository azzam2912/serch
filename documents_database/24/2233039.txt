this technique is used when a loop cannot be fully parallelized by doall parallelism due to data dependencies between loop iterations typically loop carried dependencies the sections of the loop which contain loop carried dependence are synchronized while treating each section as a parallel task on its own therefore doacross parallelism can be used to complement doall parallelism to reduce loop execution times doacross parallelism is particularly useful when one statement depends on the values generated by another statement in such a loop doall parallelism can not be implemented in a straightforward manner if the first statement blocks the execution of the second statement until the required value has been produced then the two statements would be able to execute independent of each other i e each of the aforementioned statements would be parallelized for simultaneous execution using doall parallelism the following pseudocode illustrates the operation of doacross parallelism in such a situation for int i 0 i n i in this example each iteration of the loop requires the value written into a by the previous iteration however the entire statement is not dependent on the previous iteration but only a portion of it the statement is split into