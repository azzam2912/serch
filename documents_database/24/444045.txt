in computer science linking means taking one or more objects generated by compilers and assembling them into a single executable program the objects are program modules containing machine code and symbol definitions which come in two varieties a linker program then resolves references to undefined symbols by finding out which other object defines a symbol in question and replacing placeholders with the symbol s address linkers can take objects from a collection called a library the final program does not include the whole library only those objects from it that are needed libraries for diverse purposes exist and one or more system libraries are usually linked in by default modern operating system environments allow dynamic linking or the postponing of the resolving of some undefined symbols until a program is run that means that the executable still contains undefined symbols plus a list of objects or libraries that will provide definitions for these loading the program will load these objects libraries as well and perform a final linking dynamic linking offers three advantages in a statically built program no dynamic linking occurs all the bindings have been done at compile time static builds have a very predictable behavior because they