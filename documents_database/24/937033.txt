the project features a flexible portable lightweight and open architecture for supporting qos related services on the top of a general purpose operating system as linux the architecture is well founded on formal scheduling analysis and control theoretical results a key feature of aquosa is the resource reservation layer that is capable of dynamically adapting the cpu allocation for qos aware applications based on their run time requirements in order to provide such functionality aquosa embeds a kernel level cpu scheduler implementing a resource reservation mechanism for the cpu based on earliest deadline first edf this gives the ability to the linux kernel to realize partially temporal isolation among the tasks running within the system aquosa is one of a few projects that provides real time scheduling capabilities to unprivileged users on a multi user system in a controlled way by means of a properly designed access control model the architecture of the project may be summarized as follows at the lowest level a patch to the linux kernel adds the ability to notify to dynamically loaded modules any relevant scheduling event these have been identified in the creation or death of tasks as well as the block and unblock