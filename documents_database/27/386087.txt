when an executing unit process or thread receives a signal from the os it should react in some way defined by the datasheet and the conventional meaning of this signal i e by dumping its data stopping execution synchronizing something the codice 2 system call is used to declare the behavior of the program should it receive one particular non system reserved signal this is done by giving along with the system call a structure containing among others a function pointer to the signal handling routine some predefined signals such as codice 3 have locked behavior that is handled by the system and cannot be overridden by such system calls the posix standard requires that the sigaction structure be defined as below in the header file and it should contain at least the following fields implementations are free to define additional possibly non portable fields the sa handler member specifies the address of a function to be called when the process receives the signal the signal number is passed as an integer argument to this function the sa mask member specifies additional signals to be blocked during the execution of signal handler sa mask must be initialized with sigemptyset 3