the system is said to support a given model if operations on memory follow specific rules the data consistency model specifies a contract between programmer and system wherein the system guarantees that if the programmer follows the rules memory will be consistent and the results of reading writing or updating memory will be predictable this is different from coherence which occurs in systems that are cached or cache less and is consistency of data with respect to all processors coherence deals with maintaining a global order in which writes to a single location or single variable are seen by all processors consistency deals with the ordering of operations to multiple locations with respect to all processors high level languages such as c and java partially maintain the contract by translating memory operations into low level operations in a way that preserves memory semantics to hold to the contract compilers may reorder some memory instructions and library calls such as codice 1 encapsulate required synchronization verifying sequential consistency through model checking is undecidable in general even for finite state cache coherence protocols consistency models define rules for the apparent order and visibility of updates and are on a continuum with tradeoffs