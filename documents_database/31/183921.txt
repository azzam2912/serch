a stack buffer overflow occurs when a program writes to a memory address on the program s call stack outside of the intended data structure which is usually a fixed length buffer stack buffer overflow bugs are caused when a program writes more data to a buffer located on the stack than what is actually allocated for that buffer this almost always results in corruption of adjacent data on the stack which could lead to program crashes incorrect operation or security issues typically buffer overflow protection modifies the organization of stack allocated data so it includes a canary value that when destroyed by a stack buffer overflow shows that a buffer preceding it in memory has been overflowed by verifying the canary value execution of the affected program can be terminated preventing it from misbehaving or from allowing an attacker to take control over it other buffer overflow protection techniques include bounds checking which checks accesses to each allocated block of memory so they cannot go beyond the actually allocated space and tagging which ensures that memory allocated for storing data cannot contain executable code overfilling a buffer allocated on the stack is more likely to influence program execution than