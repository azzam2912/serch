fletcher 1934 2012 at lawrence livermore labs in the late 1970s the objective of the fletcher checksum was to provide error detection properties approaching those of a cyclic redundancy check but with the lower computational effort associated with summation techniques as with simpler checksum algorithms the fletcher checksum involves dividing the binary data word to be protected from errors into short blocks of bits and computing the modular sum of those blocks note that the terminology used in this domain can be confusing the data to be protected in its entirety is referred to as a word and the pieces into which it is divided are referred to as blocks as an example the data may be a message to be transmitted consisting of 136 characters each stored as an 8 bit byte making a data word of 1088 bits in total a convenient block size would be 8 bits although this is not required similarly a convenient modulus would be 255 although again others could be chosen so the simple checksum is computed by adding together all the 8 bit bytes of the message dividing by 255 and keeping only the remainder in practice the modulo operation is performed