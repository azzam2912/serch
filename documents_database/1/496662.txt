load link returns the current value of a memory location while a subsequent store conditional to the same memory location will store a new value only if no updates have occurred to that location since the load link together this implements a lock free atomic read modify write operation ll sc was originally proposed by jensen hagensen and broughton for the s 1 aap multiprocessor at lawrence livermore national laboratory load link is also known as load linked load and reserve or load locked if any updates have occurred the store conditional is guaranteed to fail even if the value read by the load link has since been restored as such an ll sc pair is stronger than a read followed by a compare and swap cas which will not detect updates if the old value has been restored see aba problem real implementations of ll sc do not always succeed even if there are no concurrent updates to the memory location in question any exceptional events between the two operations such as a context switch another load link or even on many platforms another load or store operation will cause the store conditional to spuriously fail older implementations will