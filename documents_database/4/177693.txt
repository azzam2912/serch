on a more abstract level bdds can be considered as a compressed representation of sets or relations unlike other compressed representations operations are performed directly on the compressed representation i e without decompression other data structures used to represent boolean functions include negation normal form nnf zhegalkin polynomials and propositional directed acyclic graphs pdag a boolean function can be represented as a rooted directed acyclic graph which consists of several decision nodes and terminal nodes there are two types of terminal nodes called 0 terminal and 1 terminal each decision node formula 1 is labeled by boolean variable formula 2 and has two child nodes called low child and high child the edge from node formula 2 to a low or high child represents an assignment of formula 2 to 0 respectively 1 such a bdd is called ordered if different variables appear in the same order on all paths from the root a bdd is said to be reduced if the following two rules have been applied to its graph in popular usage the term bdd almost always refers to reduced ordered binary decision diagram robdd in the literature used when the ordering and reduction aspects need to be