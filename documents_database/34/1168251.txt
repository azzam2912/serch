in mvp all presentation logic is pushed to the presenter the model view presenter software pattern originated in the early 1990s at taligent a joint venture of apple ibm and hewlett packard mvp is the underlying programming model for application development in taligent s c based commonpoint environment the pattern was later migrated by taligent to java and popularized in a paper by taligent cto mike potel after taligent s discontinuation in 1998 andy bower and blair mcglashan of dolphin smalltalk adapted the mvp pattern to form the basis for their smalltalk user interface framework in 2006 microsoft began incorporating mvp into its documentation and examples for user interface programming in the net framework the evolution and multiple variants of the mvp pattern including the relationship of mvp to other design patterns such as mvc is discussed in detail in an article by martin fowler and another by derek greer mvp is a user interface architectural pattern engineered to facilitate automated unit testing and improve the separation of concerns in presentation logic normally the view implementation instantiates the concrete presenter object providing a reference to itself the following c code demonstrates a simple view constructor where concretedomainpresenter implements the idomainpresenter