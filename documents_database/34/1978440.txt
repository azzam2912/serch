more specifically shadow heaps make use of the shadow merge algorithm to achieve insertion in o f n amortized time and deletion in o log n log log n f n amortized time for any choice of 1 f n log log n throughout this article it is assumed that a and b are binary heaps with a b shadow merge is an algorithm for merging two binary heaps efficiently if these heaps are implemented as arrays specifically the running time of shadow merge on two heaps formula 1 and formula 2 is formula 3 we wish to merge the two binary min heaps formula 1 and formula 2 the algorithm is as follows again let formula 14 denote the path and formula 16 denote the subtree of the concatenated heap formula 8 the number of nodes in formula 14 is at most twice the depth of formula 8 which is formula 36 moreover the number of nodes in formula 16 at depth formula 38 is at most 3 4 the number of nodes at depth formula 39 so the subtree has size formula 40 since there are at most 2 nodes at each level on formula 14 then reading