work is done before it is known whether it is actually needed so as to prevent a delay that would have to be incurred by doing the work after it is known that it is needed if it turns out the work was not needed after all most changes made by the work are reverted and the results are ignored the objective is to provide more concurrency if extra resources are available this approach is employed in a variety of areas including branch prediction in pipelined processors value prediction for exploiting value locality prefetching memory and files and optimistic concurrency control in database systems speculative multithreading is a special case of speculative execution modern pipelined microprocessors use speculative execution to reduce the cost of conditional branch instructions using schemes that predict the execution path of a program based on the history of branch executions in order to improve performance and utilization of computer resources instructions can be scheduled at a time when it has not yet been determined that the instructions will need to be executed ahead of a branch speculative computation was a related earlier concept eager execution is a form of speculative execution where both sides of the