approximation algorithms naturally arise in the field of theoretical computer science as a consequence of the widely believed p np conjecture under this conjecture a wide class of optimization problems cannot be solved exactly in polynomial time the field of approximation algorithms therefore tries to understand how closely it is possible to approximate optimal solutions to such problems in polynomial time in an overwhelming majority of the cases the guarantee of such algorithms is a multiplicative one expressed as an approximation ratio or approximation factor i e the optimal solution is always guaranteed to be within a predetermined multiplicative factor of the returned solution however there are also many approximation algorithms that provide an additive guarantee on the quality of the returned solution a notable example of an approximation algorithm that provides both is the classic approximation algorithm of lenstra shmoys and tardos for scheduling on unrelated parallel machines the design and analysis of approximation algorithms crucially involves a mathematical proof certifying the quality of the returned solutions in the worst case this distinguishes them from heuristics such as annealing or genetic algorithms which find reasonably good solutions on some inputs but provide no clear indication at the outset on