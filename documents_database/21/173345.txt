a non blocking algorithm is lock free if there is guaranteed system wide progress and wait free if there is also guaranteed per thread progress the word non blocking was traditionally used to describe telecommunications networks that could route a connection through a set of relays without having to re arrange existing calls see clos network also if the telephone exchange is not defective it can always make the connection see nonblocking minimal spanning switch the traditional approach to multi threaded programming is to use locks to synchronize access to shared resources synchronization primitives such as mutexes semaphores and critical sections are all mechanisms by which a programmer can ensure that certain sections of code do not execute concurrently if doing so would corrupt shared memory structures if one thread attempts to acquire a lock that is already held by another thread the thread will block until the lock is free blocking a thread can be undesirable for many reasons an obvious reason is that while the thread is blocked it cannot accomplish anything if the blocked thread had been performing a high priority or real time task it would be highly undesirable to halt its progress other problems are