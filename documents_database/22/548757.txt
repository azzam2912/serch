they are considered a robust choice for implementing such algorithms as prim s mst algorithm and support the following operations assuming a min heap the analysis of pairing heaps time complexity was initially inspired by that of splay trees the amortized time per delete min is and the operations find min meld and insert run in amortized time when a decrease key operation is added as well determining the precise asymptotic running time of pairing heaps has turned out to be difficult initially the time complexity of this operation was conjectured on empirical grounds to be but fredman proved that the amortized time per decrease key is at least formula 1 for some sequences of operations using a different amortization argument pettie then proved that insert meld and decrease key all run in formula 2 amortized time which is formula 3 elmasry later introduced elaborations of pairing heaps for which decrease key runs in formula 4 amortized time and other operations have optimal amortized bounds but no tight formula 5 bound is known for the original data structure although this is worse than other priority queue algorithms such as fibonacci heaps which perform decrease key in formula 6 amortized time