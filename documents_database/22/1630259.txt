it has been used to exploit pdf format and adobe flash a just in time compiler jit by definition produces code as its data since the purpose is to produce executable data a jit compiler is one of the few types of programs that can not be run in a no executable data environment because of this jit compilers are normally exempt from data execution prevention a jit spray attack does heap spraying with the generated code to produce exploit code from jit an idea from dion blazakis is used the input program usually javascript or actionscript typically contains numerous constant values that can be erroneously executed as code for example the xor operation could be used jit then will transform bytecode to native x86 code like the attacker then uses a suitable bug to redirect code execution into the newly generated code for example a buffer overflow or use after free bug could allow the attack to modify a function pointer or return address this causes the cpu to execute instructions in a way that was unintended by the jit authors the attacker is usually not even limited to the expected instruction boundaries it is possible to jump into