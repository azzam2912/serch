it is related to pointer analysis and shape analysis when a variable or an object is allocated in a subroutine a pointer to the variable can escape to other threads of execution or to calling subroutines if an implementation uses tail call optimization usually required for functional languages objects may also be seen as escaping to called subroutines if a language supports first class continuations as do scheme and standard ml of new jersey portions of the call stack may also escape if a subroutine allocates an object and returns a pointer to it the object can be accessed from undetermined places in the program the pointer has escaped pointers can also escape if they are stored in global variables or other data structures that in turn escape the current procedure escape analysis determines all the places where a pointer can be stored and whether the lifetime of the pointer can be proven to be restricted only to the current procedure and or thread a compiler can use the results of escape analysis as a basis for optimizations in object oriented programming languages dynamic compilers are particularly good candidates for performing escape analysis in traditional static compilation method overriding can