it was developed by sudhir ahuja at at t bell laboratories in collaboration with david gelernter and nicholas carriero at yale university in 1986 this model is implemented as a coordination language in which several primitives operating on ordered sequence of typed data objects tuples are added to a sequential language such as c and a logically global associative memory called a tuplespace in which processes store and retrieve tuples the original linda model requires four operations that individual workers perform on the tuples and the tuplespace the linda calculus is a formalisation of the above model with the difference that in the following formula 1 subsumes both out and eval operations the presentation of the calculus is based on cridlig et al we abstract the concrete representation of tuples we just assume that we have a set of tuples formula 2 and we are allowed to form and apply a substitution function formula 3 on tuples substituting variables for terms that yields a tuple for example given we have a tuple formula 4 then applying a substitution formula 5 on formula 6 yields formula 7 the linda calculus processes are defined by the following grammar formula 8 the syntax