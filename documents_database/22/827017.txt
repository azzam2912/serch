map reduce filter frp has been used for programming graphical user interfaces guis robotics games and music aiming to simplify these problems by explicitly modeling time the original formulation of functional reactive programming can be found in the icfp 97 paper functional reactive animation by conal elliott and paul hudak frp has taken many forms since its introduction in 1997 one axis of diversity is discrete vs continuous semantics another axis is how frp systems can be changed dynamically the earliest formulation of frp used continuous semantics aiming to abstract over many operational details that are not important to the meaning of a program the key properties of this formulation are this semantic model of frp in side effect free languages is typically in terms of continuous functions and typically over time formulations such as event driven frp and elm before version 0 17 require that updates are discrete and event driven these formulations have pushed for practical frp focusing on semantics that have a simple api that can be implemented efficiently in a setting such as robotics or in a web browser in these formulations it is common that the ideas of behaviors and events are combined into signals