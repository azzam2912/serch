as a result when a value is changed all subsequent read operations of the corresponding memory location will see the updated value even if it is cached conversely in multiprocessor or multicore systems there are two or more processing elements working at the same time and so it is possible that they simultaneously access the same memory location provided none of them changes the data in this location they can share it indefinitely and cache it as they please but as soon as one updates the location the others might work on an out of date copy that e g resides in their local cache consequently some scheme is required to notify all the processing elements of changes to shared values such a scheme is known as a memory coherence protocol and if such a protocol is employed the system is said to have a coherent memory the exact nature and meaning of the memory coherency is determined by the consistency model that the coherence protocol implements in order to write correct concurrent programs programmers must be aware of the exact consistency model that is employed by their systems when implemented in hardware the coherency protocol can for example be