np is the set of decision problems for which the problem instances where the answer is yes have proofs verifiable in polynomial time an equivalent definition of np is the set of decision problems solvable in polynomial time by a non deterministic turing machine this definition is the basis for the abbreviation np nondeterministic polynomial time these two definitions are equivalent because the algorithm based on the turing machine consists of two phases the first of which consists of a guess about the solution which is generated in a non deterministic way while the second phase consists of a deterministic algorithm that verifies if the guess is a solution to the problem decision problems are assigned complexity classes such as np based on the fastest known algorithms therefore decision problems may change classes if faster algorithms are discovered it is easy to see that the complexity class p all problems solvable deterministically in polynomial time is contained in np problems where solutions can be verified in polynomial time because if a problem is solvable in polynomial time then a solution is also verifiable in polynomial time by simply solving the problem but np contains many more problems the hardest of