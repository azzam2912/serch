this is merely an instance of the pigeonhole principle the impact of collisions depends on the application when hash functions and fingerprints are used to identify similar data such as homologous dna sequences or similar audio files the functions are designed so as to maximize the probability of collision between distinct but similar data checksums on the other hand are designed to minimize the probability of collisions between similar inputs without regard for collisions between very different inputs although hashing is generally pretty quick and efficient to do there exists some limitations that can cause problems when it comes to computer security although there are some prevention methods being discovered to protect against hashing collisions hashing is still not a perfect operation when it comes to hashing strings there could be multiple strings that can be hashed to the same value hackers can use this knowledge to their advantage to bypass security measures such as username and passwords according to the example in the website learn cryptography we can see that the two strings hello and 8571935789325698 can be hashed to the same hash value 89232323 this would be effective for an attacker to know because when passwords are stored