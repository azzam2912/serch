alloy provides a simple structural modeling tool based on first order logic alloy is targeted at the creation of micro models that can then be automatically checked for correctness alloy specifications can be checked using the alloy analyzer although alloy is designed with automatic analysis in mind alloy differs from many specification languages designed for model checking in that it permits the definition of infinite models the alloy analyzer is designed to perform finite scope checks even on infinite models the alloy language and analyzer are developed by a team led by daniel jackson at the massachusetts institute of technology in the united states the first version of the alloy language appeared in 1997 it was a rather limited object modeling language succeeding iterations of the language added quantifiers higher arity relations polymorphism subtyping and signatures the mathematical underpinnings of the language were heavily influenced by the z notation and the syntax of alloy owes more to languages such as object constraint language the alloy analyzer was specifically developed to support so called lightweight formal methods as such it is intended to provide fully automated analysis in contrast to the interactive theorem proving techniques commonly used with specification languages similar