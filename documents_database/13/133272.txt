these rules may be applied by the type system to determine if a program is well typed and what type expressions have a prototypical example of the use of type rules is in defining type inference in the simply typed lambda calculus which is the internal language of cartesian closed categories an expression formula 1 of type formula 2 is written as formula 3 the typing environment is written as formula 4 the notation for inference is the usual one for sequents and inference rules and has the following general form the sequents above the line are the premises that must be fulfilled for the rule to be applied yielding the conclusion the sequents below the line this can be read as if expression formula 6 has type formula 7 in environment formula 8 for all formula 9 then the expression formula 1 will have an environment formula 4 and type formula 2 for example a simple language to perform arithmetic calculations on real numbers may have the following rules a type rule may have no premises and usually the line is omitted in these cases a type rule may also change an environment by adding new variables to a