the designers goal was to create a language available sources indicate that euler was operational by 1965 euler employs a general type concept in euler arrays procedures and switches are not quantities which are declared and named by identifiers they are not as opposed to algol quantities which are on the same level as variables rather these quantities are on the level of numeric and boolean constants thus besides the traditional numeric and logical constants euler introduces the following additional types all constants can be assigned to variables which have the same form as in algol but for which no fixed types are specified euler is a dynamically typed programming language furthermore a procedure can produce a value of any type when executed and this type can vary from one call of the procedure to the next similarly the elements of a list can have values of any type and these can be different from element to element within the list so when the list elements are labels a switch is obtained if the elements are procedures a procedure list is obtained which is not available in algol 60 if the elements are lists themselves then a general tree structure