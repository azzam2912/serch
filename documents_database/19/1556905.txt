in fact an entire operating system os along with the applications running within can be run in a virtual machine vm however when multiple vms concurrently run on the same physical host they share the available physical resources including cpu s network adapter s disk s and memory this adds a level of unpredictability in the performance that may be exhibited by each individual vm as compared to what is expected for example a vm with a temporary compute intensive peak might disturb the other running vms causing a significant and undesirable temporary drop in their performance in a world of computing that is shifting towards cloud computing paradigms where resources computing storage networking may be remotely rented in virtualized form under precise service level agreements it would be highly desirable that the performance of the virtualized resources be as stable and predictable as possible multiple techniques may be used to face with the aforementioned problem they aim to achieve some degree of temporal isolation across the concurrently running vms at the various critical levels of scheduling cpu scheduling network scheduling and disk scheduling for the cpu it is possible to use proper scheduling techniques at the hypervisor level to