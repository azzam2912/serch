the historical development of this subject is recounted in hewitt 2008b the denotational theory of computational system semantics is concerned with finding mathematical objects that represent what systems do collections of such objects are called domains the actor uses the domain of event diagram scenarios it is usual to assume some properties of the domain such as the existence of limits of chains see cpo and a bottom element various additional properties are often reasonable and helpful the article on domain theory has more details a domain is typically a partial order which can be understood as an order of definedness for instance given event diagram scenarios x and y one might let x y mean that y extends the computations x the mathematical denotation for a system s is found by constructing increasingly better approximations from an initial empty denotation called using some denotation approximating function progression to construct a denotation meaning for s as follows it would be expected that progression would be monotone i e if x y then progression x progression y more generally we would expect that this last stated property of progression is called continuity a central question of denotational semantics is to characterize