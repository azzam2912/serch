this allows eliminating named variables the language was introduced in backus s 1977 turing award lecture can programming be liberated from the von neumann style subtitled a functional style and its algebra of programs the paper sparked interest in functional programming research eventually leading to modern functional languages and not the function level paradigm backus had hoped fp itself never found much use outside of academia in the 1980s backus created a successor language fl which remained a research project the values that fp programs map into one another comprise a set which is closed under sequence formation these values can be built from any set of atoms booleans integers reals characters etc is the undefined value or bottom sequences are bottom preserving fp programs are functions f that each map a single value x into another functions are either primitive i e provided with the fp environment or are built from the primitives by program forming operations also called functionals an example of primitive function is constant which transforms a value x into the constant valued function x functions are strict another example of a primitive function is the selector function family denoted by 1 2 where in contrast