the measures involved can be passive such as obfuscation to make reverse engineering difficult or active tamper detection techniques which aim to make a program malfunction or not operate at all if modified it is essentially tamper resistance implemented in the software domain it shares certain aspects but also differs from related technologies like copy protection and trusted hardware though it is often used in combination with them anti tampering technology typically makes the software somewhat larger and also has a performance impact there are no provably secure software anti tampering methods thus the field is an arms race between attackers and software anti tampering technologies tampering can be malicious to gain control over some aspect of the software with an unauthorized modification that alters the computer program code and behaviour examples include installing rootkits and backdoors disabling security monitoring subverting authentication malicious code injection for the purposes of data theft or to achieve higher user privileges altering control flow and communication license code bypassing for the purpose of software piracy code interference to extract data or algorithms and counterfeiting software applications are vulnerable to the effects of tampering and code changes throughout their lifecycle from development and deployment to