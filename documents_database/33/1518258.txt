some of these steps relate just to that specific business process while others may be of use to other business processes as well part of this reusable logic pertains to the business entities that usually remains the same when compared to the rules and processing steps that may change in future if services are designed that contain both process specific logic and entity specific logic the chances of reusing the same entity specific logic from another business process become somewhat negligible on the other hand if this kind of logic is split up into a separate container i e a service then any new business processes which make use of the same business entity can reuse this logic apart from the reusability problem in order to address the change in the behavior of a business entity updating the entrenched entity related logic across multiple business processes requires extra efforts and makes the maintenance of such services a complex task in response to the aforementioned issues the entity abstraction pattern advocates that logic that relates to the processing of business entities be separated from the process specific single purpose logic and designed as independent logic that has no knowledge of the