other languages use other terminology the ada programming language talks about language bindings while java refers to its ffi as the jni java native interface or jna java native access foreign function interface has become generic terminology for mechanisms which provide such services the primary function of a foreign function interface is to mate the semantics and calling conventions of one programming language the host language or the language which defines the ffi with the semantics and conventions of another the guest language this process must also take into consideration the runtime environments and or application binary interfaces of both this can be done in several ways ffis may be complicated by the following considerations examples of ffis include in addition many ffis can be generated automatically for example swig however in the case of an extension language a semantic inversion of the relationship of guest and host can occur when a smaller body of extension language is the guest invoking services in the larger body of host language such as writing a small plugin for gimp some ffis are restricted to free standing functions while others also allow calls of functions embedded in an object or class often called