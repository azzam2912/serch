the theoretical foundation was provided in a 1974 paper by bernard lang along with other general context free parsers such as gll it describes a systematic way to produce such algorithms and provides uniform results regarding correctness proofs complexity with respect to grammar classes and optimization techniques the first actual implementation of glr was described in a 1984 paper by masaru tomita it has also been referred to as a parallel parser tomita presented five stages in his original work though in practice it is the second stage that is recognized as the glr parser though the algorithm has evolved since its original forms the principles have remained intact as shown by an earlier publication lang was primarily interested in more easily used and more flexible parsers for extensible programming languages tomita s goal was to parse natural language text thoroughly and efficiently standard lr parsers cannot accommodate the nondeterministic and ambiguous nature of natural language and the glr algorithm can briefly the glr algorithm works in a manner similar to the lr parser algorithm except that given a particular grammar a glr parser will process all possible interpretations of a given input in a breadth first search on the