its primary objective is to reduce the amount of element copying due to automatic array resizing operations and to improve memory usage patterns whereas simple dynamic arrays based on geometric expansion waste linear n space where n is the number of elements in the array hashed array trees waste only order o storage space an optimization of the algorithm allows elimination of data copying completely at a cost of increasing the wasted space it can perform access in constant o 1 time though slightly slower than simple dynamic arrays the algorithm has o 1 amortized performance when appending a series of objects to the end of a hashed array tree contrary to its name it does not use hash functions as defined by sitarski a hashed array tree has a top level directory containing a power of two number of leaf arrays all leaf arrays are the same size as the top level directory this structure superficially resembles a hash table with array based collision chains which is the basis for the name hashed array tree a full hashed array tree can hold m elements where m is the size of the top level directory the use of powers of