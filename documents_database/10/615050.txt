an rw lock allows concurrent access for read only operations while write operations require exclusive access this means that multiple threads can read the data in parallel but an exclusive lock is needed for writing or modifying data when a writer is writing the data all other writers or readers will be blocked until the writer is finished writing a common use might be to control access to a data structure in memory that cannot be updated atomically and is invalid and should not be read by another thread until the update is complete readers writer locks are usually constructed on top of mutexes and condition variables or on top of semaphores some rw locks allow the lock to be atomically upgraded from being locked in read mode to write mode as well as being downgraded from write mode to read mode upgradable rw locks can be tricky to use safely since whenever two threads holding reader locks both attempt to upgrade to writer locks a deadlock is created that can only be broken by one of the threads releasing its reader lock rw locks can be designed with different priority policies for reader vs writer access the lock can