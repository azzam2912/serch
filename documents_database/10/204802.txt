memoization has also been used in other contexts and for purposes other than speed gains such as in simple mutually recursive descent parsing although related to caching memoization refers to a specific case of this optimization distinguishing it from forms of caching such as buffering or page replacement in the context of some logic programming languages memoization is also known as tabling the term memoization was coined by donald michie in 1968 and is derived from the latin word memorandum to be remembered usually truncated as memo in american english and thus carries the meaning of turning the results of a function into something to be remembered while memoization might be confused with memorization because they are etymological cognates memoization has a specialized meaning in computing a memoized function remembers the results corresponding to some set of specific inputs subsequent calls with remembered inputs return the remembered result rather than recalculating it thus eliminating the primary cost of a call with given parameters from all but the first call made to the function with those parameters the set of remembered associations may be a fixed size set controlled by a replacement algorithm or a fixed set depending on the nature