an atomic transaction is an indivisible and irreducible series of database operations such that either all occur or nothing occurs a guarantee of atomicity prevents updates to the database occurring only partially which can cause greater problems than rejecting the whole series outright as a consequence the transaction cannot be observed to be in progress by another database client at one moment in time it has not yet happened and at the next it has already occurred in whole or nothing happened if the transaction was cancelled in progress an example of an atomic transaction is a monetary transfer from bank account a to account b it consists of two operations withdrawing the money from account a and saving it to account b performing these operations in an atomic transaction ensures that the database remains in a consistent state that is money is neither lost nor created if either of those two operations fail atomicity does not behave completely orthogonally with regard to the other acid properties of the transactions for example isolation relies on atomicity to roll back changes in the event of isolation failures such as deadlock consistency also relies on rollback in the event of a consistency