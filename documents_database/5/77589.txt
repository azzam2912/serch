the algorithm differs from a bubble sort in that it sorts in both directions on each pass through the list this sorting algorithm is only marginally more difficult to implement than a bubble sort and solves the problem of turtles in bubble sorts it provides only marginal performance improvements and does not improve asymptotic performance like the bubble sort it is not of practical interest insertion sort is preferred for simple sorts though it finds some use in education the simplest form goes through the whole list each time the first rightward pass will shift the largest element to its correct place at the end and the following leftward pass will shift the smallest element to its correct place at the beginning the second complete pass will shift the second largest and second smallest elements to their correct places and so on after i passes the first i and the last i elements in the list are in their correct positions and do not need to be checked by shortening the part of the list that is sorted each time the number of operations can be halved see bubble sort this is an example of the algorithm in matlab octave