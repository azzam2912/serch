unlike human readable source code bytecodes are compact numeric codes constants and references normally numeric addresses that encode the result of compiler parsing and performing semantic analysis of things like type scope and nesting depths of program objects the name bytecode stems from instruction sets that have one byte opcodes followed by optional parameters intermediate representations such as bytecode may be output by programming language implementations to ease interpretation or it may be used to reduce hardware and operating system dependence by allowing the same code to run cross platform on different devices bytecode may often be either directly executed on a virtual machine a p code machine i e interpreter or it may be further compiled into machine code for better performance since bytecode instructions are processed by software they may be arbitrarily complex but are nonetheless often akin to traditional hardware instructions virtual stack machines are the most common but virtual register machines have been built also different parts may often be stored in separate files similar to object modules but dynamically loaded during execution a bytecode program may be executed by parsing and directly executing the instructions one at a time this kind of bytecode interpreter is