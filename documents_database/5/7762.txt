typically an object file can contain three kinds of symbols for most compilers each object file is the result of compiling one input source code file when a program comprises multiple object files the linker combines these files into a unified executable program resolving the symbols as it goes along linkers can take objects from a collection called a library or runtime library most linkers do not include the whole library in the output they include only the files that are referenced by other object files or libraries library linking may thus be an iterative process with some modules included requiring additional modules to be linked and so on libraries exist for diverse purposes and one or more system libraries are usually linked in by default the linker also takes care of arranging the objects in a program s address space this may involve relocating code that assumes a specific base address into another base since a compiler seldom knows where an object will reside it often assumes a fixed base location for example zero relocating machine code may involve re targeting of absolute jumps loads and stores the executable output by the linker may need another relocation pass when