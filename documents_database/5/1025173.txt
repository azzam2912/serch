it is based on join calculus and makes the concurrency constructs of the c language available as a cli assembly that any cli compliant language can use joins can be used to express concurrency in an application using the joins pattern usable both for multi threaded applications as well as for event based distributed applications the joins api emulates declarative type safe expression of synchronization patterns the joins library emulates asynchronous and synchronous methods an asynchronous method in c and joins parlance is one which does not block the caller method nor does it return any result whereas a synchronous method blocks the caller method in the joins api synchronous as well as asynchronous methods are implemented as generic delegates usage of generics provide type safety for example a set of synchronous and asynchronous method can be created and using them to create an object that implements the pattern as when asynchronous methods are called the parameters are put in a channel which is a queue managed by the joins runtime the method can optionally start a new thread to process the parameters in the background and return the results when the corresponding synchronous method is called the parameter is