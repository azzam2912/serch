for example when a consumer purchases a car the car s state changes from for sale to sold a car dealer s system architecture may treat this state change as an event whose occurrence can be made known to other applications within the architecture from a formal perspective what is produced published propagated detected or consumed is a typically asynchronous message called the event notification and not the event itself which is the state change that triggered the message emission events do not travel they just occur however the term event is often used metonymically to denote the notification message itself which may lead to some confusion this is due to event driven architectures often being designed atop message driven architectures where such communication pattern requires one of the inputs to be text only the message to differentiate how each communication should be handled this architectural pattern may be applied by the design and implementation of applications and systems that transmit events among loosely coupled software components and services an event driven system typically consists of event emitters or agents event consumers or sinks and event channels emitters have the responsibility to detect gather and transfer events an event emitter