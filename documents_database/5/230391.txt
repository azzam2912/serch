because its design goal was to obtain cross platform high performance zpl programs run fast on both sequential and parallel computers highly parallel zpl programs are simple and easy to write because it exclusively uses implicit parallelism originally called orca c zpl was designed and implemented during 1993 1995 by the orca project of the computer science and engineering department at the university of washington zpl uses the array abstraction to implement a data parallel programming model this is the reason why zpl achieves such good performance having no parallel directives or other forms of explicit parallelism zpl exploits the operational trait that when aggregate computations are described in terms of arrays many scalar operations must be implicitly performed to implement the array operations this implied computation can be automatically allotted to different processors to achieve concurrency parallelism arises from the semantics of the array operations zpl is translated into a conventional abstract syntax tree representation on which program analysis and program optimizations are performed ansi c code is generated as the object code this c program which is machine independent because it implements certain operations in abstract form is then compiled using the native c compiler on the target