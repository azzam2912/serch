jpf was developed at the nasa ames research center and open sourced in 2005 the acronym jpf is not to be confused with the unrelated java plugin framework project the core of jpf is a java virtual machine jpf executes normal java bytecode programs and can store match and restore program states its primary application has been model checking of concurrent programs to find defects such as data races and deadlocks with its respective extensions jpf can also be used for a variety of other purposes including jpf has no fixed notion of state space branches and can handle both data and scheduling choices the following system under test contains a simple race condition between two threads accessing the same variable codice 1 in statements 1 and 2 which can lead to a division by zero exception if 1 is executed before 2 public class racer implements runnable without any additional configuration jpf would find and report the division by zero if jpf is configured to verify absence of race conditions regardless of their potential downstream effects it will produce the following output explaining the error and showing a counter example leading to the error javapathfinder v6 0 c riacs