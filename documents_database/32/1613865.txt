instances of these class templates are c classes that define a function call operator and the instances of these classes can be called as if they were functions it is possible to perform very sophisticated operations without writing a new function object simply by combining predefined function objects and function object adaptors the class template codice 2 provided by c 11 is a general purpose polymorphic function wrapper instances of codice 2 can store copy and invoke any callable target functions lambda expressions expressions defining anonymous functions bind expressions instances of function adapters that transform functions to other functions of smaller arity by providing values for some of the arguments or other function objects the algorithms provided by the c standard library do not require function objects of more than two arguments function objects that return boolean values are an important special case a unary function whose return type is is called a predicate and a binary function whose return type is is called a binary predicate in general a function object has restrictions on the type of its argument the type restrictions need not be simple though may be overloaded or may be a member template similarly there need