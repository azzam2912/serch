it exposes that functionality through two traditional application programming interfaces apis the blas interface and the cblas interface blis also includes two apis native to the framework a typed blas like api and an object api these native interfaces provide access to blas like functionality that is not supported by but closely related to operations found in the blas and cblas the framework is developed and supported by the science of high performance computing shpc group of the oden institute for computational engineering and sciences at the university of texas at austin blis yields high performance on many current cpu microarchitectures in both single threaded and multithreaded modes of execution blis also offers competitive performance for some cases of matrix multiplication in which one or more matrix operands are unusually skinny and or small the framework achieves high performance by employing specialized kernels typically written in gnu extended inline assembly syntax along with cache and register blocking through matrix operands blis also works on processors for which custom kernels have not yet been written in those cases the framework relies upon portable kernel implementations that perform at a lower rate of computation blis is sometimes described as a refactoring of