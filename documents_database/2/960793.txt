this approach differs from multiprocessing in a multithreaded application the threads share the resources of a single or multiple cores which include the computing units the cpu caches and the translation lookaside buffer tlb where multiprocessing systems include multiple complete processing units in one or more cores multithreading aims to increase utilization of a single core by using thread level parallelism as well as instruction level parallelism as the two techniques are complementary they are sometimes combined in systems with multiple multithreading cpus and with cpus with multiple multithreading cores the multithreading paradigm has become more popular as efforts to further exploit instruction level parallelism have stalled since the late 1990s this allowed the concept of throughput computing to re emerge from the more specialized field of transaction processing even though it is very difficult to further speed up a single thread or single program most computer systems are actually multitasking among multiple threads or programs thus techniques that improve the throughput of all tasks result in overall performance gains two major techniques for throughput computing are multithreading and multiprocessing if a thread gets a lot of cache misses the other threads can continue taking advantage of the unused computing