it reduces the number of class attributes by encapsulating them in single data object it allows the class designer to remove write privilege of attributes that are intended to be set only during construction even from methods of the target class pimpl private implementation or opaque pointer a class may expose its attributes class variables to manipulation when manipulation is no longer desirable e g after construction using the private class data design pattern prevents that undesirable manipulation a class may have one time mutable attributes that cannot be declared final using this design pattern allows one time setting of those class attributes the motivation for this design pattern comes from the design goal of protecting class state by minimizing the visibility of its attributes data this design pattern applies to any class in any object oriented language the consequences of using this design pattern include the following the private class data design pattern solves the problems above by extracting a data class for the target class and giving the target class instance an instance of the extracted data class the following c code illustrates an opportunity to use the private class data design pattern the attributes radius color and