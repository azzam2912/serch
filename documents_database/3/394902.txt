this is in contrast to a multi pass compiler which converts the program into one or more intermediate representations in steps between source code and machine code and which reprocesses the entire compilation unit in each sequential pass this refers to the logical functioning of the compiler not to the actual reading of the source file once only for instance the source file could be read once into temporary storage but that copy could then be scanned many times the ibm 1130 fortran compiler stored the source in memory and used many passes by contrast the assembler on systems lacking a disc storage unit required that the source deck of cards be presented twice to the card reader punch one pass compilers are smaller and faster than multi pass compilers one pass compilers are unable to generate as efficient programs as multi pass compilers due to the limited scope of available information many effective compiler optimizations require multiple passes over a basic block loop especially nested loops subroutine or entire module some require passes over an entire program some programming languages simply cannot be compiled in a single pass as a result of their design for example pl i allows