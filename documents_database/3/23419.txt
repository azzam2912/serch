an interpreter generally uses one of the following strategies for program execution early versions of lisp programming language and dartmouth basic would be examples of the first type perl python matlab and ruby are examples of the second while ucsd pascal is an example of the third type source programs are compiled ahead of time and stored as machine independent code which is then linked at run time and executed by an interpreter and or compiler for jit systems some systems such as smalltalk and contemporary versions of basic and java may also combine two and three interpreters of various types have also been constructed for many languages traditionally associated with compilation such as algol fortran cobol and c c while interpretation and compilation are the two main means by which programming languages are implemented they are not mutually exclusive as most interpreting systems also perform some translation work just like compilers the terms interpreted language or compiled language signify that the canonical implementation of that language is an interpreter or a compiler respectively a high level language is ideally an abstraction independent of particular implementations interpreters were used as early as 1952 to ease programming within the limitations of