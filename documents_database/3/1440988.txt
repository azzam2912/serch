to clang s implementations of the c c and objective c programming languages that uses a lambda expression like syntax to create closures within these languages blocks are supported for programs developed for mac os x 10 6 and ios 4 0 although third party runtimes allow use on mac os x 10 5 and ios 2 2 and non apple systems apple designed blocks with the explicit goal of making it easier to write programs for the grand central dispatch threading architecture although it is independent of that architecture and can be used in much the same way as closures in other languages apple has implemented blocks both in their own branch of the gnu compiler collection and in the upstream clang llvm compiler front end language runtime library support for blocks is also available as part of the llvm project the khronos group uses blocks syntax to enqueue kernels from within kernels as of version 2 0 of opencl like function definitions blocks can take arguments and declare their own variables internally unlike ordinary c function definitions their value can capture state from their surrounding context a block definition produces an opaque value which contains both a reference