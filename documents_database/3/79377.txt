it is not a finished design that can be transformed directly into source or machine code it is a description or template for how to solve a problem that can be used in many different situations design patterns are formalized best practices that the programmer can use to solve common problems when designing an application or system object oriented design patterns typically show relationships and interactions between classes or objects without specifying the final application classes or objects that are involved patterns that imply mutable state may be unsuited for functional programming languages some patterns can be rendered unnecessary in languages that have built in support for solving the problem they are trying to solve and object oriented patterns are not necessarily suitable for non object oriented languages design patterns may be viewed as a structured approach to computer programming intermediate between the levels of a programming paradigm and a concrete algorithm patterns originated as an architectural concept by christopher alexander 1977 78 in 1987 kent beck and ward cunningham began experimenting with the idea of applying patterns to programming specifically pattern languages and presented their results at the oopsla conference that year in the following years beck cunningham and