the equivalence of regular expressions and finite automata is known as kleene s theorem after american mathematician stephen cole kleene in the chomsky hierarchy regular languages are defined to be the languages that are generated by type 3 grammars regular grammars regular languages are very useful in input parsing and programming language design the collection of regular languages over an alphabet is defined recursively as follows see regular expression for its syntax and semantics note that the above cases are in effect the defining rules of regular expression all finite languages are regular in particular the empty string language is regular other typical examples include the language consisting of all strings over the alphabet a b which contain an even number of a s or the language consisting of all strings of the form several a s followed by several b s a simple example of a language that is not regular is the set of strings a b n 0 intuitively it cannot be recognized with a finite automaton since a finite automaton has finite memory and it cannot remember the exact number of a s techniques to prove this fact rigorously are given below a regular language satisfies