however it did have a system call clone which creates a copy of the calling process where the copy shares the address space of the caller the linuxthreads project used this system call to provide kernel level threads most of the previous thread implementations in linux worked entirely in userland unfortunately it only partially complied with posix particularly in the areas of signal handling scheduling and inter process synchronization primitives to improve upon linuxthreads it was clear that some kernel support and a new threading library would be required two competing projects were started to address the requirement ngpt next generation posix threads worked on by a team which included developers from ibm and nptl by developers at red hat the ngpt team collaborated closely with the nptl team and combined the best features of both implementations into nptl the ngpt project was subsequently abandoned in mid 2003 after merging its best features into nptl nptl was first released in red hat linux 9 old style linux posix threading is known for having trouble with threads that refuse to yield to the system occasionally because it does not take the opportunity to preempt them when it arises something that windows