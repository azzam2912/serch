it is similar to the descriptions of factorials found in mathematics textbooks much of haskell code is similar to standard mathematical notation in facility and syntax the first line of the factorial function describes the type of this function while it is optional it is considered to be good style to include it it can be read as the function factorial factorial has type from integer to integer integer integer that is it takes an integer as an argument and returns another integer the type of a definition is inferred automatically if the programmer didn t supply a type annotation the second line relies on pattern matching an important feature of haskell note that parameters of a function are not in parentheses but separated by spaces when the function s argument is 0 zero it will return the integer 1 one for all other cases the third line is tried this is the recursion and executes the function again until the base case is reached using the product function from the prelude a number of small functions analogous to c s standard library and using the haskell syntax for arithmetic sequences the factorial function can be expressed in haskell as