uims are designed to support n tier architectures by strictly defining and enforcing the boundary between the business logic and the gui a fairly rigid software architecture is nearly always implied by the uims and most often only one paradigm of separation is supported in a single uims a uims may also have libraries and systems such as graphical tools for the creation of user interface resources or data stores generally you cannot easily use multiple uims systems at the same time so choosing the correct model for your uims is a critical design decision in any project the choice of system is dependent upon the system s you wish to create user interfaces for and the general style of your application for example if you want to create a web based front end or just a standalone application or both that would be an important factor in choosing if you want to deploy to the macintosh windows and linux that would further influence your choice of a uims system there are many uims approaches described in research papers however there are not very many systems available commercially or through open source in a frequently cited body of work foley