this is particularly useful for one pass compilers and separate compilation forward declaration is used in languages that require declaration before use it is necessary for mutual recursion in such languages as it is impossible to define such functions or data structures without a forward reference in one definition one of the functions respectively data structures must be defined first it is also useful to allow flexible code organization for example if one wishes to place the main body at the top and called functions below it in other languages forward declarations are not necessary which generally requires instead a multi pass compiler and for some compilation to be deferred to link time in these cases identifiers must be defined variables initialized functions defined before they are used in execution but do not need to be defined before they are used in source code for compilation or interpretation identifiers do not need to be immediately resolved to an existing entity a basic example in c is in c and c the line above represents a forward declaration of a function and is the function s prototype after processing this declaration the compiler would allow the program code to refer to