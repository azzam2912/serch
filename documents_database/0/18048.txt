the emphasis on explicit control flow distinguishes an imperative programming language from a declarative programming language within an imperative programming language a control flow statement is a statement the execution of which results in a choice being made as to which of two or more paths to follow for strict programming language non strict functional languages functions and language constructs exist to achieve the same result but they are usually not termed control flow statements a set of statements is in turn generally structured as a block programming block which in addition to grouping also defines a lexical scope interrupt s and signal computing signals are low level mechanisms that can alter the flow of control in a way similar to a subroutine but usually occur as a response to some external stimulus or event that can occur asynchronous systems asynchronously rather than execution of an in line control flow statement at the level of machine language or assembly language control flow instructions usually work by altering the program counter for some central processing unit s cpus the only control flow instructions available are conditional or unconditional branch computer science branch instructions also termed jumps file for loop diagram png